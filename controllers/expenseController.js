const Expense = require("../models/Expense");

// üìå 2.1. L·∫•y danh s√°ch kho·∫£n chi ch∆∞a x√°c nh·∫≠n
exports.getPendingExpenses = async (req, res) => {
    try {
        const pendingExpenses = await Expense.find({ status: "PENDING" }).lean();
        res.status(200).json(pendingExpenses);
    } catch (error) {
        res.status(500).json({ message: "L·ªói khi l·∫•y danh s√°ch kho·∫£n chi", error });
    }
};

// üìå 2.2. Qu·∫£n l√Ω x√°c nh·∫≠n kho·∫£n chi
exports.approveExpense = async (req, res) => {
    try {
        console.log('ok');
        const { expenseId } = req.params;

        const expense = await Expense.findById(expenseId);
        if (!expense) return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y kho·∫£n chi" });

        expense.status = "APPROVED";
        await expense.save();

        res.status(200).json({ message: "Kho·∫£n chi ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n", expense });
    } catch (error) {
        res.status(500).json({ message: "L·ªói khi x√°c nh·∫≠n kho·∫£n chi", error });
    }
};

// üìå 2.3. Qu·∫£n l√Ω y√™u c·∫ßu ch·ªânh s·ª≠a kho·∫£n chi
exports.rejectExpense = async (req, res) => {
    try {
        const { expenseId } = req.params;
        const { reason } = req.body;

        const expense = await Expense.findById(expenseId);
        if (!expense) return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y kho·∫£n chi" });

        expense.status = "REJECTED";
        expense.rejectionReason = reason;
        await expense.save();

        res.status(200).json({ message: "Kho·∫£n chi ƒë√£ b·ªã t·ª´ ch·ªëi", expense });
    } catch (error) {
        res.status(500).json({ message: "L·ªói khi t·ª´ ch·ªëi kho·∫£n chi", error });
    }
};

// üìå 2.4. Thanh to√°n c√°c kho·∫£n chi ƒë√£ ƒë∆∞·ª£c ph√™ duy·ªát
exports.payExpenses = async (req, res) => {
    try {
        const { expenseIds } = req.body;

        const updatedExpenses = await Expense.updateMany(
            { _id: { $in: expenseIds }, status: "APPROVED" },
            { status: "PAID" }
        );

        res.status(200).json({ message: "Kho·∫£n chi ƒë√£ ƒë∆∞·ª£c thanh to√°n", updatedExpenses });
    } catch (error) {
        res.status(500).json({ message: "L·ªói khi thanh to√°n kho·∫£n chi", error });
    }
};

// üìå 3.3. L·∫•y danh s√°ch chi ph√≠ theo nhi·ªám v·ª•
exports.getExpensesByTask = async (req, res) => {
    try {
        const { taskId } = req.query;

        const expenses = await Expense.find({ taskId })
            .select("description amount status")
            .lean(); // ‚úÖ Gi·∫£m t·∫£i b·ªô nh·ªõ

        res.status(200).json(expenses);
    } catch (error) {
        res.status(500).json({ message: "L·ªói khi l·∫•y danh s√°ch chi ph√≠", error });
    }
};
